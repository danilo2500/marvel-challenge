//
//  DetailViewController.swift
//  marvel-challenge
//
//  Created by Danilo Henrique on 14/07/20.
//  Copyright (c) 2020 danilo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import NVActivityIndicatorView

protocol DetailDisplayLogic: AnyObject {
    func displayCharacter(viewModel: Detail.Character.ViewModel)
    func displayImage(viewModel: Detail.GetImage.ViewModel)
    func displayError(_ error: Detail.Error)
}

class DetailViewController: UIViewController {
    
    var interactor: DetailBusinessLogic?
    var router: (NSObjectProtocol & DetailRoutingLogic & DetailDataPassing)?
    
    // MARK: Outlets
    
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var imageView: UIImageView!
    @IBOutlet weak var descriptionLabel: UILabel!
    @IBOutlet weak var starButton: UIButton!
    
    // MARK: Variables
    
    var viewModel: Detail.Character.ViewModel?
    
    // MARK: Computed Propierties
    
    var starButtonIsFavorited: Bool = false {
        didSet {
            if starButtonIsFavorited {
                let image = UIImage(named: "star-filled")
                starButton.setImage(image, for: .normal)
            } else {
                let image = UIImage(named: "star-empty")
                starButton.setImage(image, for: .normal)
            }
        }
    }
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        let bundle = Bundle(for: type(of: self))
        super.init(nibName: nibNameOrNil, bundle: bundle)
    }
    
    required init?(coder: NSCoder) {
        super.init(coder: coder)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.requestCharacter()
        requestImage()
    }

    private func requestImage() {
        LoadingView.show()
        interactor?.requestImage()
    }
    
    @IBAction func didTouchStarButton(_ sender: Any) {
        if starButtonIsFavorited {
            interactor?.removeCharacterFromFavorite()
        } else {
            interactor?.saveCharacterInFavorite()
        }
        starButtonIsFavorited.toggle()
    }
}

// MARK: Display Logic

extension DetailViewController: DetailDisplayLogic {
    func displayCharacter(viewModel: Detail.Character.ViewModel) {
        title = viewModel.name
        nameLabel.text = viewModel.name
        descriptionLabel.text = viewModel.description
        starButtonIsFavorited = viewModel.isFavorited
    }
    
    func displayImage(viewModel: Detail.GetImage.ViewModel) {
        LoadingView.dismiss()
        imageView.image = viewModel.image
    }
    
    func displayError(_ error: Detail.Error) {
        showAlert(message: error.message)
    }
}
