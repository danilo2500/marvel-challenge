//
//  CharactersPresenter.swift
//  marvel-challenge
//
//  Created by Danilo Henrique on 11/07/20.
//  Copyright (c) 2020 danilo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharactersPresentationLogic {
    func presentCharacters(response: Characters.GetCharacters.Response)
    func presentSaveCharacterInFavorite(response: Characters.SaveInFavorite.Response)
    func presentError(_ error: Characters.Error)
}

class CharactersPresenter: CharactersPresentationLogic {
    
    weak var viewController: CharactersDisplayLogic?
    
    // MARK: Presentation Logic
    
    func presentCharacters(response: Characters.GetCharacters.Response) {
        let displayedCharacters = response.results.map { (character) -> Characters.DisplayedCharacter in
            let name = character.name ?? "-"
            let isFavorited = containsID(ofCharacter: character, on: response.favorites)
            let displayedCharacter = Characters.DisplayedCharacter(name: name, isFavorited: isFavorited)
            return displayedCharacter
        }
        
        let viewModel = Characters.GetCharacters.ViewModel(displayedCharacters: displayedCharacters)
        viewController?.displayCharacters(viewModel: viewModel)
    }
    
    private func containsID(ofCharacter character: CharacterModel, on favorites: [FavoriteCharacterEntity]) -> Bool {
        guard let characterId = character.id else { return false }
        
        let isFavorited = favorites.contains { (favorite) -> Bool in
            return Int(favorite.id) == characterId
        }
        return isFavorited
    }
    
    func presentSaveCharacterInFavorite(response: Characters.SaveInFavorite.Response) {
        
    }
    
    func presentError(_ error: Characters.Error) {
        viewController?.displayError(error)
    }
}
