//
//  CharactersPresenter.swift
//  marvel-challenge
//
//  Created by Danilo Henrique on 11/07/20.
//  Copyright (c) 2020 danilo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharactersPresentationLogic {
    func presentCharacters(response: Characters.GetCharacters.Response)
    func presentSearchCharacters(response: Characters.SearchCharacters.Response)
    func presentError(_ error: Characters.Error)
}

class CharactersPresenter: CharactersPresentationLogic {
    
    weak var viewController: CharactersDisplayLogic?
    
    // MARK: Presentation Logic
    
    func presentCharacters(response: Characters.GetCharacters.Response) {
        let displayedCharacters = response.results.map({createDisplayedCharacter(with: $0)})
        
        let viewModel = Characters.GetCharacters.ViewModel(displayedCharacters: displayedCharacters)
        viewController?.displayCharacters(viewModel: viewModel)
    }
    
    func presentSearchCharacters(response: Characters.SearchCharacters.Response) {
        let displayedCharacters = response.results.map({createDisplayedCharacter(with: $0)})
        
        let viewModel = Characters.SearchCharacters.ViewModel(displayedCharacters: displayedCharacters)
        viewController?.displaySearchedCharacters(viewModel: viewModel)
    }
    
    func presentError(_ error: Characters.Error) {
        viewController?.displayError(error)
    }
    
    // MARK: Private Functions
    
    private func createDisplayedCharacter(with character: CharacterModel) -> Characters.DisplayedCharacter {
        let name = character.name ?? "-"
        let displayedCharacter = Characters.DisplayedCharacter(name: name, isFavorited: false)
        return displayedCharacter
    }
}
